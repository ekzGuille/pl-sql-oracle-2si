SET SERVEROUTPUT ON;

CLEAR SCR 
DISCONNECT  
-- Conectarse como SYS y crear otro usuario
CONNECT SYS AS SYSDBA; 

DROP USER GUILLERMO; 

-- Usuario con el que trabajaremos
CREATE USER GUILLERMO IDENTIFIED BY Guillermo; 
GRANT DBA TO GUILLERMO; 
GRANT ALL PRIVILEGES TO GUILLERMO; 

GRANT SELECT, INSERT, UPDATE, DELETE ON BANCOS TO GUILLERMO;
GRANT SELECT, INSERT, UPDATE, DELETE ON SUCURSALES TO GUILLERMO;
GRANT SELECT, INSERT, UPDATE, DELETE ON CUENTAS TO GUILLERMO;
GRANT SELECT, INSERT, UPDATE, DELETE ON MOVIMIENTOS TO GUILLERMO;


REM *** CREACION DE OBJETOS ***

-- OBJETO BANCOS
CREATE OR REPLACE TYPE BANCOS_OBJ AS OBJECT (
  COD_BANCO   NUMBER(4),
  NF_BANCO    VARCHAR2(10),
  NOMBRE_BANC VARCHAR2(30),
  DOM_FISCAL  VARCHAR(35),
  POBLACION   VARCHAR(35),
  MEMBER FUNCTION getCodBanco RETURN NUMBER;
  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER);
  MEMBER FUNCTION getNfBanco RETURN VARCHAR2;
  MEMBER PROCEDURE setNfBanco(_nf_banco VARCHAR2);
  MEMBER FUNCTION getNombreBanc RETURN VARCHAR2;
  MEMBER PROCEDURE setNombreBanc(_nombre_banc VARCHAR2);
  MEMBER FUNCTION getDomFiscal RETURN VARCHAR;
  MEMBER PROCEDURE setDomFiscal(_dom_fiscal VARCHAR);
  MEMBER FUNCTION getPoblacion RETURN VARCHAR;
  MEMBER PROCEDURE setPoblacion(_poblacion VARCHAR);
  MEMBER PROCEDURE toString;
);

CREATE OR REPLACE TYPE BODY BANCOS_OBJ AS
  MEMBER FUNCTION getCodBanco RETURN NUMBER
    IS
    BEGIN RETURN COD_BANCO;
  END getCodBanco;

  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER)
  BEGIN
    COD_BANCO := _cod_banco;
  END setCodBanco;

  MEMBER FUNCTION getNfBanco RETURN VARCHAR2
    IS
    BEGIN RETURN NF_BANCO;
  END getNfBanco;

  MEMBER PROCEDURE setNfBanco(_nf_banco VARCHAR2)
  BEGIN
    NF_BANCO := _nf_banco;
  END setNfBanco;

  MEMBER FUNCTION getNombreBanc RETURN VARCHAR2
    IS
    BEGIN RETURN NOMBRE_BANC;
  END getNombreBanc;

  MEMBER PROCEDURE setNombreBanc(_nombre_banc VARCHAR2)
  BEGIN
    NOMBRE_BANC := _nombre_banc;
  END setNombreBanc;

  MEMBER FUNCTION getDomFiscal RETURN VARCHAR
    IS
    BEGIN RETURN DOM_FISCAL;
  END getDomFiscal;

  MEMBER PROCEDURE setDomFiscal(_dom_fiscal VARCHAR)
  BEGIN
    DOM_FISCAL := _dom_fiscal;
  END setDomFiscal;

  MEMBER FUNCTION getPoblacion RETURN VARCHAR
    IS 
    BEGIN RETURN POBLACION;
  END getPoblacion;

  MEMBER PROCEDURE setPoblacion(_poblacion VARCHAR)
  BEGIN
    POBLACION := _poblacion;
  END setPoblacion;
  
  MEMBER PROCEDURE toString
    IS
    BEGIN
      DBMS_OUTPUT.PUT_LINE('COD_BANCO ' || COD_BANCO);
      DBMS_OUTPUT.PUT_LINE('NF_BANCO ' || NF_BANCO);
      DBMS_OUTPUT.PUT_LINE('NOMBRE_BANC ' || NOMBRE_BANC);
      DBMS_OUTPUT.PUT_LINE('DOM_FISCAL ' || DOM_FISCAL);
      DBMS_OUTPUT.PUT_LINE('POBLACION ' || POBLACION);
    END toString;
END;
/

-- OBJETO SUCURSALES
CREATE OR REPLACE TYPE SUCURSALES_OBJ AS OBJECT (
  COD_BANCO   NUMBER(4),
  COD_SUCUR   NUMBER(4),
  NOMBRE_SUC  VARCHAR2(35),
  DIREC_SUC   VARCHAR2(35),
  LOC_SUC     VARCHAR2(20),
  PROV_SUC    VARCHAR2(20),
  MEMBER FUNCTION getCodBanco RETURN NUMBER;
  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER);
  MEMBER FUNCTION getCodSucur RETURN NUMBER;
  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER);
  MEMBER FUNCTION getNombreSuc VARCHAR2;
  MEMBER PROCEDURE setNombreSuc(_nombre_suc VARCHAR2);
  MEMBER FUNCTION getDirecSuc VARCHAR2; 
  MEMBER PROCEDURE setDirecSuc(_direc_suc VARCHAR2);
  MEMBER FUNCTION getLocSuc VARCHAR2;
  MEMBER PROCEDURE setLocSuc(_loc_suc VARCHAR2);
  MEMBER FUNCTION getProvSuc VARCHAR2;
  MEMBER PROCEDURE setProvSuc(_prov_suc VARCHAR2);
  MEMBER PROCEDURE toString;
);

CREATE OR REPLACE TYPE BODY SUCURSALES_OBJ AS
  MEMBER FUNCTION getCodBanco RETURN NUMBER
    IS
    BEGIN RETURN COD_BANCO;
  END getCodBanco;

  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER)
    BEGIN COD_BANCO := _cod_banco;
  END setCodBanco;

  MEMBER FUNCTION getCodSucur RETURN NUMBER
    IS
    BEGIN RETURN COD_SUCUR;
  END getCodSucur;

  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER)
    BEGIN COD_SUCUR := _cod_sucur;
  END setCodSucur;

  MEMBER FUNCTION getNombreSuc VARCHAR2
    IS
    BEGIN RETURN NOMBRE_SUC;
  END getNombreSuc;

  MEMBER PROCEDURE setNombreSuc(_nombre_suc VARCHAR2)
    BEGIN NOMBRE_SUC := _nombre_suc;
  END setNombreSuc;

  MEMBER FUNCTION getDirecSuc VARCHAR2
    IS
    BEGIN RETURN DIREC_SUC;
  END getDirecSuc; 

  MEMBER PROCEDURE setDirecSuc(_direc_suc VARCHAR2)
    BEGIN DIREC_SUC := _direc_suc;
  END setDirecSuc;

  MEMBER FUNCTION getLocSuc VARCHAR2
    IS
    BEGIN RETURN LOC_SUC;
  END getLocSuc;

  MEMBER PROCEDURE setLocSuc(_loc_suc VARCHAR2)
    BEGIN LOC_SUC := _loc_suc;
  END setLocSuc;

  MEMBER FUNCTION getProvSuc VARCHAR2
    IS
    BEGIN RETURN PROV_SUC;
  END getProvSuc;

  MEMBER PROCEDURE setProvSuc(_prov_suc VARCHAR2)
    BEGIN PROV_SUC := _prov_suc;
  END setProvSuc;

  MEMBER PROCEDURE toString
  IS
    BEGIN
      DBMS_OUTPUT.PUT_LINE('COD_BANCO ' || COD_BANCO);
      DBMS_OUTPUT.PUT_LINE('COD_SUCUR ' || COD_SUCUR);
      DBMS_OUTPUT.PUT_LINE('NOMBRE_SUC ' || NOMBRE_SUC);
      DBMS_OUTPUT.PUT_LINE('DIREC_SUC ' || DIREC_SUC);
      DBMS_OUTPUT.PUT_LINE('LOC_SUC ' || LOC_SUC);
      DBMS_OUTPUT.PUT_LINE('PROV_SUC ' || PROV_SUC);
    END toString;
END;
/

-- OBJETO CUENTAS
CREATE OR REPLACE TYPE CUENTAS_OBJ AS OBJECT (
  COD_BANCO   NUMBER(4),
  COD_SUCUR   NUMBER(4),
  NUM_CTA     NUMBER(10),
  FECHA_ALTA  DATE,
  NOMBRE_CTA  VARCHAR2(35),
  DIREC_CTA   VARCHAR2(35),
  POBLA_CTA   VARCHAR2(20),
  SALDO_DEBE  NUMBER(10),
  SALDO_HABER NUMBER(10),
  MEMBER FUNCTION getCodBanco RETURN NUMBER;
  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER);
  MEMBER FUNCTION getCodSucur RETURN NUMBER;
  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER);
  MEMBER FUNCTION getNumCta RETURN NUMBER;
  MEMBER PROCEDURE setNumCta(_num_cta NUMBER);
  MEMBER FUNCTION getFechaAlta RETURN DATE;
  MEMBER PROCEDURE setFechaAlta(_fecha_alta DATE);
  MEMBER FUNCTION getNombreCta RETURN VARCHAR2;
  MEMBER PROCEDURE setNombreCta(_nombre_cta VARCHAR2);
  MEMBER FUNCTION getDirectCta RETURN VARCHAR2;
  MEMBER PROCEDURE setDirectCta(_direct_cta VARCHAR2);
  MEMBER FUNCTION getPoblaCta RETURN VARCHAR2;
  MEMBER PROCEDURE setPoblaCta(_pobla_cta VARCHAR2);
  MEMBER FUNCTION getSaldoDebe RETURN NUMBER;
  MEMBER PROCEDURE setSaldoDebe(_saldo_debe NUMBER);
  MEMBER FUNCTION getSaldoHaber RETURN NUMBER;
  MEMBER PROCEDURE setSaldoHaber(_saldo_haber NUMBER);
  MEMBER PROCEDURE toString;
);

CREATE OR REPLACE TYPE BODY CUENTAS_OBJ AS
  MEMBER FUNCTION getCodBanco RETURN NUMBER
    IS
    BEGIN RETURN COD_BANCO;
  END getCodBanco;

  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER)
    BEGIN COD_BANCO:= _cod_banco;
  END setCodBanco;

  MEMBER FUNCTION getCodSucur RETURN NUMBER
    IS
    BEGIN RETURN COD_SUCUR;
  END getCodSucur;

  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER)
    BEGIN COD_SUCUR:= _cod_sucur;
  END setCodSucur;

  MEMBER FUNCTION getNumCta RETURN NUMBER
    IS
    BEGIN RETURN NUM_CTA;
  END getNumCta;

  MEMBER PROCEDURE setNumCta(_num_cta NUMBER)
  BEGIN NUM_CTA:= _num_cta;
  ENs getNumCta;

  MEMBER FUNCTION getFechaAlta RETURN DATE
    IS
    BEGIN RETURN FECHA_ALTA;
  END getFechaAlta;

  MEMBER PROCEDURE setFechaAlta(_fecha_alta DATE)
    BEGIN FECHA_ALTA:= _fecha_alta;
  END setFechaAlta;

  MEMBER FUNCTION getNombreCta RETURN VARCHAR2
    IS
    BEGIN RETURN NOMBRE_CTA;
  END getNombreCta;

  MEMBER PROCEDURE setNombreCta(_nombre_cta VARCHAR2)
    BEGIN NOMBRE_CTA:= _nombre_cta;
  END setNombreCta;

  MEMBER FUNCTION getDirectCta RETURN VARCHAR2
    IS
    BEGIN RETURN DIREC_CTA;
  END getDirectCta;

  MEMBER PROCEDURE setDirectCta(_direct_cta VARCHAR2)
    BEGIN DIREC_CTA:= _direct_cta;
  END setDirectCta;

  MEMBER FUNCTION getPoblaCta RETURN VARCHAR2
    IS
    BEGIN RETURN POBLA_CTA;
  END getPoblaCta;

  MEMBER PROCEDURE setPoblaCta(_pobla_cta VARCHAR2)
    BEGIN POBLA_CTA:= _pobla_cta;
  END setPoblaCta;

  MEMBER FUNCTION getSaldoDebe RETURN NUMBER
    IS
    BEGIN RETURN SALDO_DEBE;
  END getSaldoDebe;

  MEMBER PROCEDURE setSaldoDebe(_saldo_debe NUMBER)
    BEGIN SALDO_DEBE:= _saldo_debe;
    END setSaldoDebe;

  MEMBER FUNCTION getSaldoHaber RETURN NUMBER
    IS
    BEGIN RETURN SALDO_HABER;
  END getSaldoHaber;

  MEMBER PROCEDURE setSaldoHaber(_saldo_haber NUMBER)
    BEGIN SALDO_HABER:= _saldo_haber;
  END setSaldoHaber;

  MEMBER PROCEDURE toString
  IS
    BEGIN
      DBMS_OUTPUT.PUT_LINE('COD_BANCO ' || COD_BANCO);
      DBMS_OUTPUT.PUT_LINE('COD_SUCUR ' || COD_SUCUR);
      DBMS_OUTPUT.PUT_LINE('NUM_CTA ' || NUM_CTA);
      DBMS_OUTPUT.PUT_LINE('FECHA_ALTA ' || FECHA_ALTA);
      DBMS_OUTPUT.PUT_LINE('NOMBRE_CTA ' || NOMBRE_CTA);
      DBMS_OUTPUT.PUT_LINE('DIREC_CTA ' || DIREC_CTA);
      DBMS_OUTPUT.PUT_LINE('POBLA_CTA ' || POBLA_CTA);
      DBMS_OUTPUT.PUT_LINE('SALDO_DEBE ' || SALDO_DEBE);
      DBMS_OUTPUT.PUT_LINE('SALDO_HABER ' || SALDO_HABER);
    END toString;
END;
/

-- OBJETO MOVIMIENTOS
CREATE OR REPLACE TYPE MOVIMIENTOS_OBJ AS OBJECT (
  COD_BANCO   NUMBER(4),
  COD_SUCUR   NUMBER(4),
  NUM_CTA     NUMBER(10),
  FECHA_MOV   DATE,
  TIPO_MOV    CHAR(1),
  IMPORTE     NUMBER(10),
  MEMBER FUNCTION getCodBanco RETURN NUMBER;
  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER);
  MEMBER FUNCTION getCodSucur RETURN NUMBER;
  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER);
  MEMBER FUNCTION getNumCta RETURN NUMBER;
  MEMBER PROCEDURE setNumCta(_num_cta NUMBER);
  MEMBER FUNCTION getFechaMov RETURN DATE;
  MEMBER PROCEDURE setFechaMov(_fecha_mov DATE);
  MEMBER FUNCTION getTipoMov RETURN CHAR;
  MEMBER PROCEDURE setTipoMov(_tipo_mov CHAR);
  MEMBER FUNCTION getImporte RETURN NUMBER;
  MEMBER PROCEDURE setImporte(_importe NUMBER);
  MEMBER PROCEDURE toString;
);

CREATE OR REPLACE TYPE BODY MOVIMIENTOS_OBJ AS 
  MEMBER FUNCTION getCodBanco RETURN NUMBER
    IS
    BEGIN RETURN COD_BANCO;
  END getCodBanco;

  MEMBER PROCEDURE setCodBanco(_cod_banco NUMBER)
    BEGIN COD_BANCO := _cod_banco;
  END setCodBanco;
  
  MEMBER FUNCTION getCodSucur RETURN NUMBER
    IS
    BEGIN RETURN COD_SUCUR;
  END getCodSucur;

  MEMBER PROCEDURE setCodSucur(_cod_sucur NUMBER)
    BEGIN COD_SUCUR := _cod_sucur;
  END setCodSucur;
  
  MEMBER FUNCTION getNumCta RETURN NUMBER
    IS
    BEGIN RETURN NUM_CTA;
  END getNumCta;

  MEMBER PROCEDURE setNumCta(_num_cta NUMBER)
    BEGIN NUM_CTA := _num_cta;
  END setNumCta;
  
  MEMBER FUNCTION getFechaMov RETURN DATE
    IS
    BEGIN RETURN FECHA_MOV;
  END getFechaMov;

  MEMBER PROCEDURE setFechaMov(_fecha_mov DATE)
    BEGIN FECHA_MOV := _fecha_mov;
  END setFechaMov;
  
  MEMBER FUNCTION getTipoMov RETURN CHAR
    IS
    BEGIN RETURN TIPO_MOV;
  END getTipoMov;

  MEMBER PROCEDURE setTipoMov(_tipo_mov CHAR)
    BEGIN TIPO_MOV := _tipo_mov;
  END setTipoMov;
  
  MEMBER FUNCTION getImporte RETURN NUMBER
    IS
    BEGIN RETURN IMPORTE;
  END getImporte;

  MEMBER PROCEDURE setImporte(_importe NUMBER)
    BEGIN IMPORTE := _importe;
  END setImporte;

  MEMBER PROCEDURE toString
  IS
    BEGIN
      DBMS_OUTPUT.PUT_LINE('COD_BANCO ' || COD_BANCO);
      DBMS_OUTPUT.PUT_LINE('COD_SUCUR ' || COD_SUCUR);
      DBMS_OUTPUT.PUT_LINE('NUM_CTA ' || NUM_CTA);
      DBMS_OUTPUT.PUT_LINE('FECHA_MOV ' || FECHA_MOV);
      DBMS_OUTPUT.PUT_LINE('TIPO_MOV ' || TIPO_MOV);
      DBMS_OUTPUT.PUT_LINE('IMPORTE ' || IMPORTE);
    END toString;
END;
/
