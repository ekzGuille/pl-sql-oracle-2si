-- Pagina 271

SET SERVEROUTPUT ON;


-- Ejercicio 1
CREATE OR REPLACE PROCEDURE SUMA(NUM1 NUMBER, NUM2 NUMBER)
AS
  V_RESULTADO NUMBER;
BEGIN
  V_RESULTADO := NUM1 + NUM2;
  DBMS_OUTPUT.PUT_LINE('LA SUMA ES: ' || V_RESULTADO);
END SUMA;
/


-- Ejercicio 2
-- PROBAR
CREATE OR REPLACE PROCEDURE INVIERTE(FRASE VARCHAR2)
AS
  V_FRASE VARCHAR2 DEFAULT '';
  V_CONTADOR NUMBER;
BEGIN
  FOR V_CONTADOR IN REVERSE LENGTH(FRASE)..1 -- O a 0
  LOOP
    V_FRASE := CONCAT(V_FRASE, SUBSTRING(FRASE,V_CONTADOR,1));
  END LOOP;
DBMS_OUTPUT.PUT_LINE('EL RESULTAOD ES: ' || V_FRASE);
END INVIERTE;
/


-- Ejercicio 3
-- PROBAR
CREATE OR REPLACE FUNCTION SUMAR(NUM1 NUMBER, NUM2 NUMBER) RETURN NUMBER
AS
  V_RESULTADO NUMBER;
BEGIN
  V_RESULTADO := NUM1 + NUM2;
  RETURN V_RESULTADO;
END SUMAR;
/

-- Obtener el resultado de la funcion
BEGIN
  DBMS_OUTPUT.PUT_LINE(SUMAR(3,4));
END
/

CREATE OR REPLACE FUNCTION INVERTIR(FRASE VARCHAR2) RETURN VARCHAR2
AS 
  V_FRASE VARCHAR2 DEFAULT '';
  V_CONTADOR NUMBER;
BEGIN
  FOR V_CONTADOR IN REVERSE LENGTH(FRASE)..1 -- O a 0
  LOOP  
    V_FRASE := CONCAT(V_FRASE, SUBSTRING(V_FRASE, V_CONTADOR,1));
  END LOOP;
  RETURN V_FRASE;
END INVERTIR;
/

-- Obtener el resultado de la funcion
BEGIN
  DBMS_OUTPUT.PUT_LINE(INVERTIR('HOLA'));
END
/


-- Ejercicio 4
-- PROBAR 
CREATE OR REPLACE FUNCTION TRANSFORMA_FECHA(FECHA DATE) RETURN NUMBER
AS 
  V_ANIO NUMBER;
BEGIN 
  V_ANIO := EXTRACT(YEAR FROM FECHA);
  RETURN V_ANIO
END TRANSFORMA_FECHA;
/

-- Obtener el resultado de la funcion
BEGIN
  DBMS_OUTPUT.PUT_LINE(TRANSFORMA_FECHA('21/07/1992'));
END
/


-- Ejercicio 5
-- PROBAR
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';

CREATE OR REPLACE PROCEDURE IMPRIMIR_ANIO()
AS
  V_FECHA DATE;
BEGIN 
  SELECT TO_DATE(TO_CHAR(SYSDATE, 'DD/MM/YYYY'),'DD/MM/YYYY') INTO V_FECHA
    FROM DUAL;

    DBMS_OUTPUT.PUT_LINE('ESTAMOS EN EL ANIO ' || TRANSFORMA_FECHA(V_FECHA));
END IMPRIMIR_ANIO;
/


-- Ejercicio 6
-- PROBAR
CREATE OR REPLACE FUNCTION CALCULAR_ANIOS(FECHA1 DATE, FECHA2, DATE) RETURN NUMBER
AS 
  V_ANIOS NUMBER;
BEGIN
  IF FECHA1 >= FECHA2 THEN
    V_ANIOS := (TO_NUMBER(TO_DATE(FECHA1,'YYYY')) - TO_NUMBER(TO_DATE(FECHA2,'YYYY')));
  ELSE
    V_ANIOS := (TO_NUMBER(TO_DATE(FECHA2,'YYYY')) - TO_NUMBER(TO_DATE(FECHA1,'YYYY')));
  END IF;
  RETURN V_ANIOS;
END CALCULAR_ANIOS
/


-- Ejercicio 7
-- PROBAR
CREATE OR REPLACE PROCEDURE CALCULAR_TIENIOS(FECHA1 DATE, FECHA2 DATE)
AS
  V_TRIENIOS NUMBER;
BEGIN 
  V_TRIENIOS := CALCULAR_ANIOS(FEHCA1, FECHA2);
  DBMS_OUTPUT.PUT_LINE('HAY ' || V_TRIENIOS/3 ||' TRIENIOS ENTRE LAS DOS FECHAS');
END CALCULAR_TIENIOS;
/


-- Ejercicio 8
 -- PROBAR


-- Ejercicio 9
-- PROBAR
CREATE OR REPLACE PROCEDURE SOLO_LETRAS(ENTRADA VARCHAR2)
AS 
  V_RESPUESTA VARCHAR2;
  V_ALFABETO VARCHAR2 DEFAULT 'abcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ';
  V_CONTADOR NUMBER;
BEGIN
  FOR V_CONTADOR IN 1..LENGTH(ENTRADA)
    LOOP 
      -- TODO
      IF SUBSTRING(FRASE,V_CONTADOR,1) THEN 
      ELSE 
      END IF;
    END LOOP;
END SOLO_LETRAS;
/

-- http://ora.u440.com/cadena/replace.html
-- https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions196.htm


-- Ejercicio 10
-- PROBAR
CREATE OR REPLACE PROCEDURE BORRAR_EMPLE(ID NUMBER)
AS
BEGIN
  DELETE 
    FROM EMPLE
    WHERE EMPLE.EMP_NO = ID;
  DBMS_OUTPUT.PUT_LINE('EMPLEADO ' || ID || ' BORRADO CON EXITO');

EXCEPTION
  WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('NO SE ENCUENTRA EL EMPLEADO');

END BORRAR_EMPLE;
/


-- Ejercicio 11
-- PROBAR
CREATE OR REPLACE PROCEDURE CAMBIAR_LOC(ID NUMBER, NUEVA_LOC VARCHAR2)
AS 
BEGIN
  UPDATE DEPART
    SET DEPART.LOC = NUEVA_LOC
    WHERE DEPART.DEPT_NO = ID;

EXCEPTION 
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO SE ECUENTRA EL DEPARTAMENTO');

END CAMBIAR_LOC;
/


-- Ejercicio 12
-- PROBAR
SELECT OBJECT_NAME, OBJECT_TYPE, STATUS
  FROM USER_OBJECTS;

 